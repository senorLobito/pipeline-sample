name: Deploy app manifests
run-name: Deploy app manifests

on:
  push:
    branches:
      - main
    # paths:
      # - cdn/kis-fe/deploy_setup.json

# Nastavime, aby nikdy nebezelo vic instanci workflow najednou. Tim je zajisteno,
# ze toto workflow naposledy pobezi vzdy na poslednim commitu v masteru.
concurrency:
  group: deploy-app-manifests

jobs:
  get-changed-envs:
    runs-on: ubuntu-latest
    name: Generate manifest to modified environments
    outputs:
      matrix: ${{ steps.changes.outputs.matrix }}
      # has_changes: ${{ steps.changes.outputs.has_changes }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get Changed Envs
        id: changes
        run: |
          ENVS=("deva" "int" "prs" "pred" "prod")
          CHANGED_ENVS=""

          OLD_SETUP_FILE=$(git show HEAD~1:cdn/kis-fe/deploy_setup.json)
          NEW_SETUP_FILE=$(git show HEAD:cdn/kis-fe/deploy_setup.json)

          for ENV in "${ENVS[@]}"; do
            if diff <(echo "$OLD_SETUP_FILE" | jq -S ".$ENV") <(echo "$NEW_SETUP_FILE" | jq -S ".$ENV") > /dev/null; then
              echo "No changes detected for $ENV"
            else
              echo "Changes detected for $ENV"
              CHANGED_ENVS="$CHANGED_ENVS\"$ENV\","
            fi
          done

          # changed envs
          echo "::debug::changed ENVS: $CHANGED_ENVS"

          # trim leading spaces
          CHANGED_ENVS=$(echo "$CHANGED_ENVS" | xargs)

          if [[ -z "$CHANGED_ENVS" ]]; then
            # HAS_CHANGES="has_changes=false"
            MATRIX="matrix={\"envs\":[]}"
          else
            # HAS_CHANGES="has_changes=true"

            # remove last comma
            CHANGED_ENVS=$(echo "$CHANGED_ENVS" | sed 's/,*$//')
            MATRIX="matrix={\"envs\":[$CHANGED_ENVS]}"
          fi

          echo "Any env has changed: $HAS_CHANGES"

          # matrix
          echo "::debug::final matrix: $MATRIX"

          # Output JSON matrix and HAS_CHANGES for GitHub Actions
          # echo "$HAS_CHANGES" >> $GITHUB_OUTPUT
          echo "$MATRIX" >> $GITHUB_OUTPUT

  generate-manifest-per-env:
    needs: get-changed-envs
    # if: ${{ needs.get-changed-envs.outputs.has_changes == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.get-changed-envs.outputs.matrix) }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: test
        run: echo "ENV?? ${{matrix.envs}}"
          
